Implement Data Reader Endpoint: (ok)
- Task: Develop an endpoint using NestJS that allows users to upload geojson files.
- Details: Ensure the endpoint can receive and validate the uploaded data.
  Implement validation checks to ensure the uploaded files are in the correct format and contain valid geojson data.

• Seeding and Migration:
- Task: Implement seeding and migration functionality to initialize and update the database schema.
- Details: Write scripts or commands to seed initial data into the database and perform database migrations when schema changes occur.
  Ensure data integrity and consistency during migration processes.

• User Input Validation:
- Task: Implement validation middleware in NestJS to ensure that data uploaded by users is valid and conforms to the expected format.
- Details: Write custom validation pipes or middleware to validate incoming requests containing data.
  Provide informative error responses if validation fails, including details on which fields are incorrect.

• Development of Data Processing Endpoint:
- Task: Create an endpoint in NestJS responsible for processing spatial data uploaded into the system.
- Details: Implement logic to efficiently process uploaded data and store it in the database.
  Ensure the endpoint can handle large datasets and provide responses indicating the success or failure of the processing operation.

• Unit Testing with Jest: (ok)
- Task: Write unit tests using Jest to verify the functionality of key endpoints and middleware within the application.
- Details: Write tests to cover various scenarios, including valid and invalid inputs, edge cases, and error handling.
  Test both happy paths and error conditions to ensure robustness.

• Design and Implementation of API Documentation: (ok)
- Task: Document the API endpoints using tools like Swagger to provide detailed documentation for developers.
- Details: Generate Swagger documentation for all endpoints, including descriptions, request/response formats, and example usage.
  Ensure the documentation is up-to-date with the latest changes in the API.

• Authentication and Authorization: (ok)
- Task: Implement authentication and authorization mechanisms using NestJS guards.
- Details: Secure endpoints requiring authentication and authorization using NestJS guards.
  Ensure only authorized users can access sensitive endpoints or perform certain actions.